---
# compression level
#http://peter.eisentraut.org/blog/2015/12/07/check-your-pg-dump-compression-levels/#:~:text=When%20using%20the%20custom%20output,)%20and%209%20(highest).

######################
# COMMON variables
db_name: tests
db_user: user
# dump_location: '/tmp/backup-{{ db_name }}.pgdump'
dump_file: "{{dump_location}}/backup-{{ db_name }}.sql" # tar and sql supported by ansible
dump_location: '/tmp'
restore_command: pg_restore -d {{ db_name }} {{ dump_file }}


######################
# DUMPS commands
pg_dump_command: su -c 'pg_dump {{ db_name }} --no-owner --no-privileges --format c --file {{ dump_file }}' -s /bin/sh {{ db_user }}

######################
# DUPLICITY variables
backupRemoteStorage: aws_s3

# folder of the filestore
filestore_location: ""
restore_location: "{{ backup_dir }}/{{ backup_time }}_{{ db_name }}"

# destination of the backup, can be sftp, swift, s3, etc...
dup_dst: '' 
hostname: www.example.com

include_commands: --include {{ dump_file }} --include {{ filestore_location }} --exclude '**'

options_extra_backup: --metadata-sync-mode partial --full-if-older-than 1W --file-prefix-archive archive-{{ hostname }}- --file-prefix-manifest manifest-{{ hostname }}- --file-prefix-signature signature-{{ hostname }}- --s3-european-buckets --s3-multipart-chunk-size 10 --s3-use-new-style
options_extra_restore:  --file-prefix-archive archive-{{ hostname }}- --file-prefix-manifest manifest-{{ hostname }}- --file-prefix-signature signature-{{ hostname }}- --s3-european-buckets  --s3-use-new-style

duplicity_backups_command: duplicity {{ options_extra_backup }} {{ include_commands }} / {{ dup_dst }} 
duplicity_restore_command: duplicity restore {{ options_extra_restore }} {{ dup_dst }} {{ backup_dir }}/$1_$2

backup_dir: /tmp/backups # folder where backups are imported
backup_scrip_name: backup-odoo.sh
import_aws_scrip_name: import-backup.sh
restored_file: "{{ restore_location }}{{ dump_file }}"





######################################
#### DUpLICITY EXAMPLEES and variables
######################################

# Here is an example of a backup, using sftp to back up /home/me to some_dir on the other.host machine:

  # duplicity /home/me sftp://uid@other.host/some_dir

# If the above is run repeatedly, the first will be a full backup, and subsequent ones will be incremental. To force a full backup, use the full action:

  # duplicity full /home/me sftp://uid@other.host/some_dir

# or enforcing a full every other time via --full-if-older-than <time> , e.g. a full every month:

  # duplicity --full-if-older-than 1M /home/me sftp://uid@other.host/some_dir

# Now suppose we accidentally delete /home/me and want to restore it the way it was at the time of last backup:

  # duplicity sftp://uid@other.host/some_dir /home/me

#--metadata-sync-mode mode
# This option defaults to ’full’, but you can set it to ’partial’ to avoid syncing metadata for backup chains that you are not going to use. This saves time when restoring for the first time, and lets you restore an old backup that was encrypted with a different passphrase by supplying only the target passphrase.

# --full-if-older-than time
# Perform a full backup if an incremental backup is requested, but the latest full backup in the collection is older than the given time. See the TIME FORMATS section for more information.

# --file-prefix, --file-prefix-manifest, --file-prefix-archive, --file-prefix-signature
# Adds a prefix to all files, manifest files, archive files, and/or signature files.
# The same set of prefixes must be passed in on backup and restore.
# If both global and type-specific prefixes are set, global prefix will go before type-specific prefixes.
# See
# also A NOTE ON FILENAME PREFIXES

# --s3-european-buckets
# When using the Amazon S3 backend, create buckets in Europe instead of the default (requires --s3-use-new-style ). Also see the EUROPEAN S3 BUCKETS section.

# --s3-unencrypted-connection
# Don’t use SSL for connections to S3.
# This may be much faster, at some cost to confidentiality.
# With this option, anyone who can observe traffic between your computer and S3 will be able to tell: that you are using Duplicity, the name of the bucket, your AWS Access Key ID, the increment dates and the amount of data in each increment.
# This option affects only the connection, not the GPG encryption of the backup increment files. Unless that is disabled, an observer will not be able to see the file names or contents.

# --s3-multipart-chunk-size
# Chunk size (in MB) used for S3 multipart uploads. Make this smaller than --volsize to maximize the use of your bandwidth. For example, a chunk size of 10MB with a volsize of 30MB will result in 3 chunks per volume upload.
